<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.dao.AssistantAssessmentDao">

    <resultMap type="user.entity.AssistantAssessment" id="AssistantAssessmentMap">
        <result property="assessmentId" column="assessment_id" jdbcType="VARCHAR"/>
        <result property="postgraduateId" column="postgraduate_id" jdbcType="VARCHAR"/>
        <result property="courseId" column="course_id" jdbcType="VARCHAR"/>
        <result property="instructorId" column="instructor_id" jdbcType="VARCHAR"/>
        <result property="selfAccount" column="self_account" jdbcType="VARCHAR"/>
        <result property="instructorEvaluate" column="instructor_evaluate" jdbcType="VARCHAR"/>
        <result property="evaluateResult" column="evaluate_result" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AssistantAssessmentMap">
        select
          assessment_id, postgraduate_id, course_id, instructor_id, self_account, instructor_evaluate, evaluate_result
        from software.assistant_assessment
        where assessment_id = #{assessmentId}
    </select>
    <select id="queryByCoursePost" resultMap="AssistantAssessmentMap">
        select
        *
        from software.assistant_assessment
        where postgraduate_id=#{postId} and course_id=#{courseId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AssistantAssessmentMap">
        select
          assessment_id, postgraduate_id, course_id, instructor_id, self_account, instructor_evaluate, evaluate_result
        from software.assistant_assessment
        limit #{offset}, #{limit}
    </select>
    <select id="listAllByPost" resultMap="AssistantAssessmentMap">
        select * from software.assistant_assessment
        where postgraduate_id = #{id}
    </select>
    <select id="listAllByCourse" resultMap="AssistantAssessmentMap">
        select * from software.assistant_assessment
        where course_id = #{courseid}
    </select>
    <select id="listAll" resultMap="AssistantAssessmentMap">
        select*from software.assistant_assessment
    </select>
    <select id="getMax" resultMap="AssistantAssessmentMap">
        select
        *
        from software.assistant_assessment
        where assessment_id=(select MAX(assessment_id) from software.assistant_assessment)
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AssistantAssessmentMap">
        select
        assessment_id, postgraduate_id, course_id, instructor_id, self_account, instructor_evaluate, evaluate_result
        from software.assistant_assessment
        <where>
            <if test="assessmentId != null and assessmentId != ''">
                and assessment_id = #{assessmentId}
            </if>
            <if test="postgraduateId != null and postgraduateId != ''">
                and postgraduate_id = #{postgraduateId}
            </if>
            <if test="courseId != null and courseId != ''">
                and course_id = #{courseId}
            </if>
            <if test="instructorId != null and instructorId != ''">
                and instructor_id = #{instructorId}
            </if>
            <if test="selfAccount != null and selfAccount != ''">
                and self_account = #{selfAccount}
            </if>
            <if test="instructorEvaluate != null and instructorEvaluate != ''">
                and instructor_evaluate = #{instructorEvaluate}
            </if>
            <if test="evaluateResult != null">
                and evaluate_result = #{evaluateResult}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="assessmentId" useGeneratedKeys="true">
        insert into software.assistant_assessment(postgraduate_id, course_id, instructor_id, self_account, instructor_evaluate, evaluate_result)
        values (#{postgraduateId}, #{courseId}, #{instructorId}, #{selfAccount}, #{instructorEvaluate}, #{evaluateResult})
    </insert>

    <insert id="insertBatch" keyProperty="assessmentId" useGeneratedKeys="true">
        insert into software.assistant_assessment(postgraduate_id, course_id, instructor_id, self_account,
        instructor_evaluate, evaluate_result)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.postgraduateId}, #{entity.courseId}, #{entity.instructorId}, #{entity.selfAccount},
            #{entity.instructorEvaluate}, #{entity.evaluateResult})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="assessmentId" useGeneratedKeys="true">
        insert into software.assistant_assessment(postgraduate_id, course_id, instructor_id, self_account,
        instructor_evaluate, evaluate_result)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.postgraduateId}, #{entity.courseId}, #{entity.instructorId}, #{entity.selfAccount},
            #{entity.instructorEvaluate}, #{entity.evaluateResult})
        </foreach>
        on duplicate key update
        postgraduate_id = values(postgraduate_id) , course_id = values(course_id) , instructor_id =
        values(instructor_id) , self_account = values(self_account) , instructor_evaluate = values(instructor_evaluate)
        , evaluate_result = values(evaluate_result)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update software.assistant_assessment
        <set>
            <if test="postgraduateId != null and postgraduateId != ''">
                postgraduate_id = #{postgraduateId},
            </if>
            <if test="courseId != null and courseId != ''">
                course_id = #{courseId},
            </if>
            <if test="instructorId != null and instructorId != ''">
                instructor_id = #{instructorId},
            </if>
            <if test="selfAccount != null and selfAccount != ''">
                self_account = #{selfAccount},
            </if>
            <if test="instructorEvaluate != null and instructorEvaluate != ''">
                instructor_evaluate = #{instructorEvaluate},
            </if>
            <if test="evaluateResult != null">
                evaluate_result = #{evaluateResult},
            </if>
        </set>
        where assessment_id = #{assessmentId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from software.assistant_assessment where assessment_id = #{assessmentId}
    </delete>

</mapper>