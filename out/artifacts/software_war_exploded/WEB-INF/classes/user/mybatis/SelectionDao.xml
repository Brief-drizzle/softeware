<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.dao.SelectionDao">

    <resultMap type="user.entity.Selection" id="SelectionMap">
        <result property="selectionId" column="selection_id" jdbcType="VARCHAR"/>
        <result property="postgraduateId" column="postgraduate_id" jdbcType="VARCHAR"/>
        <result property="courseId" column="course_id" jdbcType="VARCHAR"/>
        <result property="selectionTime" column="selection_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SelectionMap">
        select
          selection_id, postgraduate_id, course_id, selection_time
        from software.selection
        where selection_id = #{selectionId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SelectionMap">
        select
          selection_id, postgraduate_id, course_id, selection_time
        from software.selection
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SelectionMap">
        select
        selection_id, postgraduate_id, course_id, selection_time
        from software.selection
        <where>
            <if test="selectionId != null and selectionId != ''">
                and selection_id = #{selectionId}
            </if>
            <if test="postgraduateId != null and postgraduateId != ''">
                and postgraduate_id = #{postgraduateId}
            </if>
            <if test="courseId != null and courseId != ''">
                and course_id = #{courseId}
            </if>
            <if test="selectionTime != null">
                and selection_time = #{selectionTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="selectionId" useGeneratedKeys="true">
        insert into software.selection(postgraduate_id, course_id, selection_time)
        values (#{postgraduateId}, #{courseId}, #{selectionTime})
    </insert>

    <insert id="insertBatch" keyProperty="selectionId" useGeneratedKeys="true">
        insert into software.selection(postgraduate_id, course_id, selection_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.postgraduateId}, #{entity.courseId}, #{entity.selectionTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="selectionId" useGeneratedKeys="true">
        insert into software.selection(postgraduate_id, course_id, selection_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.postgraduateId}, #{entity.courseId}, #{entity.selectionTime})
        </foreach>
        on duplicate key update
        postgraduate_id = values(postgraduate_id) , course_id = values(course_id) , selection_time =
        values(selection_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update software.selection
        <set>
            <if test="postgraduateId != null and postgraduateId != ''">
                postgraduate_id = #{postgraduateId},
            </if>
            <if test="courseId != null and courseId != ''">
                course_id = #{courseId},
            </if>
            <if test="selectionTime != null">
                selection_time = #{selectionTime},
            </if>
        </set>
        where selection_id = #{selectionId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from software.selection where selection_id = #{selectionId}
    </delete>

</mapper>